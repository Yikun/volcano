name: E2E Spark Integration Test

on:
  # Post check in below branches
  push:
    branches:
      - master
  # PR triggered job
  pull_request:
jobs:
  k8s-integration-tests:
    name: "Run Spark (branch-3.3) / Volcano Integration test"
    runs-on: ubuntu-20.04-spark
    steps:

    - name: Checkout current Volcano repository
      if: github.event.inputs.volcano-branch==''
      uses: actions/checkout@v2

    - name: Checkout Spark repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        repository: apache/spark
        ref: branch-3.3
        path: ${{ github.workspace }}/spark
    - name: Install Java 8
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: start minikube
      id: minikube
      # minikube v0.07, See more: https://minikube.sigs.k8s.io/docs/tutorials/setup_minikube_in_github_actions
      uses: medyagh/setup-minikube@0ff5b450588f2aee88fd0daba616d04a5582e490
      with:
        cpus: 8
        memory: 15g
    - name: Build lastest volcano images
      run: |
        eval $(minikube docker-env)
        make TAG=latest update-development-yaml
        make TAG=latest images
        docker images | grep volcano
        cat ./installer/volcano-development.yaml  | grep image:
        kubectl apply -f ./installer/volcano-development.yaml
    - name: Show all K8S pods and nodes
      run: |
        # Use pre-install kubectl
        kubectl get pods -A
        kubectl get nodes -oyaml
    - name: Run K8S integration test
      run: |
        eval $(minikube docker-env)
        kubectl create clusterrolebinding serviceaccounts-cluster-admin --clusterrole=cluster-admin --group=system:serviceaccounts || true
        build/sbt -Pvolcano -Pkubernetes -Pkubernetes-integration-tests -Dtest.include.tags=volcano "kubernetes-integration-tests/test"
      working-directory: ${{ github.workspace }}/spark
    - name: Upload spark integration tests log files
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: spark-on-kubernetes-with-volcano-it-log
        path: "**/target/integration-tests.log"
    - name: Cleanup minikube
      if: always()
      run: |
        minikube delete

