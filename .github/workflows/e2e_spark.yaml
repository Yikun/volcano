name: E2E Spark Integration Test

on:
  # Post check in below branches
  push:
    branches:
      - master
      - release-1.5
  # Disable pull_request trigger when ready to merge
  pull_request:
  # Specify Spark and Volcano branch
  workflow_dispatch:
    inputs:
      spark-branch:
        description: 'Spark branch:'
        required: true
        default: 'master'
      volcano-branch:
        description: 'Volcano branch:'
        required: true
        default: 'master'

jobs:
  k8s-integration-tests:
    name: "Run Spark(${{ github.event.inputs.spark-branch || 'master' }}) / Volcano(${{ github.event.inputs.volcano-branch || github.event.push.ref || 'master' }}) Integration test"
    runs-on: self-hosted
    env:
      SPARK_LOCAL_IP: localhost
    steps:
    - name: Checkout Volcano repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        repository: volcano-sh/volcano
        ref: ${{ github.event.inputs.volcano-branch || github.event.push.ref || 'master' }}
    - name: Checkout Spark repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        repository: apache/spark
        ref: ${{ github.event.inputs.spark-branch || 'master' }}
        path: ${{ github.workspace }}/spark
    - name: Install Java 8
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: start minikube
      run: |
        # Use pre-install minikube
        minikube start
    - name: Build lastest volcano images
      run: |
        eval $(minikube docker-env)
        make TAG=ci update-development-yaml
        make TAG=ci images
        docker images | grep volcano
        cat ./installer/volcano-development.yaml  | grep image:
        kubectl apply -f ./installer/volcano-development.yaml
    - name: Show all K8S pods and nodes
      run: |
        # Use pre-install kubectl
        kubectl get pods -A
        kubectl get nodes -oyaml
    - name: Run K8S integration test
      run: |
        eval $(minikube docker-env)
        kubectl create clusterrolebinding serviceaccounts-cluster-admin --clusterrole=cluster-admin --group=system:serviceaccounts || true
        build/sbt -Pvolcano -Pkubernetes -Pkubernetes-integration-tests -Dtest.exclude.tags=minikube,r,local -Dtest.include.tags=volcano "kubernetes-integration-tests/test"
        build/sbt -Pvolcano -Pkubernetes -Pkubernetes-integration-tests -Dtest.exclude.tags=minikube,r,local "kubernetes-integration-tests/testOnly *VolcanoSuite"
      working-directory: ${{ github.workspace }}/spark
    - name: Upload spark integration tests log files
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: spark-kubernetes-${{ github.event.inputs.spark-branch || 'master' }}-${{ github.event.inputs.volcano-branch || github.event.push.ref || 'master' }}
        path: "**/target/integration-tests.log"
    - name: Cleanup minikube
      if: always()
      run: |
        minikube delete
